{"version":3,"sources":["webpack:///./node_modules/ionic4-auto-complete/fesm5/ionic4-auto-complete.js","webpack:///./src/app/pages/request-vehicle/places.page.html","webpack:///./src/app/pages/request-vehicle/places.page.scss","webpack:///./src/app/pages/request-vehicle/places.page.ts","webpack:///./src/app/pages/request-vehicle/request-vehicle.module.ts","webpack:///./src/app/pages/request-vehicle/request-vehicle.page.html","webpack:///./src/app/pages/request-vehicle/request-vehicle.page.scss","webpack:///./src/app/pages/request-vehicle/request-vehicle.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAC2F;AACzF;AACiB;AACnB;AACI;AACP;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,6BAA6B,0DAAY;AACzC,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA,6BAA6B,iDAAI;AACjC;AACA,sCAAsC,+CAAU;AAChD,gCAAgC,+DAAQ;AACxC;AACA,qBAAqB;AACrB;AACA,qBAAqB,oBAAoB,6BAA6B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,suBAAuB,mBAAmB;AAC1C;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"pages-request-vehicle-request-vehicle-module.js","sourcesContent":["import { __assign, __decorate } from 'tslib';\nimport { EventEmitter, Input, Output, ViewChild, ElementRef, HostListener, Component, Pipe, Injectable, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Subject, from, Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nvar AutoCompleteOptions = /** @class */ (function () {\n    function AutoCompleteOptions() {\n        this.animated = false;\n        this.color = null;\n        this.autocomplete = 'off';\n        this.autocorrect = 'off';\n        this.cancelButtonIcon = 'arrow-round-back';\n        this.cancelButtonText = 'Cancel';\n        this.clearIcon = 'close-circle';\n        this.clearInput = false;\n        this.clearOnEdit = false;\n        this.debounce = 250;\n        this.mode = 'md';\n        this.noItems = 'No items found.';\n        this.placeholder = 'Search';\n        this.searchIcon = 'search';\n        this.showCancelButton = false;\n        this.spellcheck = 'off';\n        this.type = 'search';\n        this.value = '';\n    }\n    return AutoCompleteOptions;\n}());\n\nvar AutoCompleteStyles = /** @class */ (function () {\n    function AutoCompleteStyles() {\n        this.list = {};\n        this.listItem = {};\n        this.searchbar = {};\n    }\n    return AutoCompleteStyles;\n}());\n\nvar AutoCompleteComponent = /** @class */ (function () {\n    /**\n     * Create a new instance\n     */\n    function AutoCompleteComponent() {\n        this.enableBrowserAutoComplete = false;\n        this.clearInvalidInput = true;\n        this.disabled = false;\n        this.exclude = [];\n        this.frontIcon = false;\n        this.hideListOnSelection = true;\n        this.location = 'auto';\n        this.maxResults = 8;\n        this.maxSelected = null;\n        this.multi = false;\n        this.name = '';\n        this.options = new AutoCompleteOptions();\n        this.removeButtonClasses = '';\n        this.removeButtonColor = 'primary';\n        this.removeButtonIcon = 'close-circle';\n        this.removeButtonSlot = 'end';\n        this.removeDuplicateSuggestions = true;\n        this.styles = new AutoCompleteStyles;\n        this.useIonInput = false;\n        this.onTouchedCallback = false;\n        this.onChangeCallback = false;\n        this.hasFocus = false;\n        this.isLoading = false;\n        this.focusedOption = -1;\n        this.showListChanged = false;\n        this.autoBlur = new EventEmitter();\n        this.autoFocus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ionAutoInput = new EventEmitter();\n        this.itemsChange = new EventEmitter();\n        this.itemsCleared = new EventEmitter();\n        this.itemsHidden = new EventEmitter();\n        this.itemRemoved = new EventEmitter();\n        this.itemSelected = new EventEmitter();\n        this.itemsShown = new EventEmitter();\n        this.modelChange = new EventEmitter();\n        this.keyword = '';\n        this.suggestions = [];\n        this._showList = false;\n        this.options = new AutoCompleteOptions();\n        this.defaultOpts = new AutoCompleteOptions();\n        this.selected = [];\n    }\n    AutoCompleteComponent_1 = AutoCompleteComponent;\n    Object.defineProperty(AutoCompleteComponent.prototype, \"model\", {\n        get: function () {\n            var model = this.selected;\n            if (!this.multi && typeof this.selected.length !== 'undefined') {\n                if (this.selected.length === 0) {\n                    model = null;\n                }\n                else {\n                    model = this.selected[0];\n                }\n            }\n            return model;\n        },\n        set: function (selected) {\n            if (typeof selected !== 'undefined' && selected !== null) {\n                this.selected = selected;\n                this.keyword = this.getLabel(selected);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoCompleteComponent.prototype, \"eager\", {\n        set: function (eager) {\n            if (eager) {\n                this.getItems(null, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoCompleteComponent.prototype, \"showList\", {\n        get: function () {\n            return this._showList;\n        },\n        set: function (value) {\n            if (this._showList === value) {\n                return;\n            }\n            this._showList = value;\n            this.showListChanged = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AutoCompleteComponent.prototype.ngAfterViewChecked = function () {\n        if (this.showListChanged) {\n            this.showListChanged = false;\n            this.showList ? this.itemsShown.emit() : this.itemsHidden.emit();\n        }\n    };\n    AutoCompleteComponent.prototype.ngDoCheck = function () {\n        if (!this.hasFocus) {\n            if (this.clearInvalidInput && (this.selected === null || this.multi)) {\n                if (this.keyword !== '') {\n                    this.keyword = '';\n                }\n                if (this.inputElem && this.inputElem.nativeElement) {\n                    if (this.inputElem.nativeElement.children && this.inputElem.nativeElement.children.length !== 0) {\n                        if (this.inputElem.nativeElement.children[0].children && this.inputElem.nativeElement.children[0].children.length !== 0) {\n                            if (this.inputElem.nativeElement.children[0].children[0].value) {\n                                this.inputElem.nativeElement.children[0].children[0].value = '';\n                            }\n                        }\n                    }\n                }\n                if (this.searchbarElem && this.searchbarElem.nativeElement) {\n                    if (this.searchbarElem.nativeElement.children && this.searchbarElem.nativeElement.children.length !== 0) {\n                        if (this.searchbarElem.nativeElement.children[0].children) {\n                            if (this.searchbarElem.nativeElement.children[0].children.length !== 0) {\n                                if (this.searchbarElem.nativeElement.children[0].children[0].value) {\n                                    this.searchbarElem.nativeElement.children[0].children[0].value = '';\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handle document click\n     *\n     * @param event\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype.documentClickHandler = function (event) {\n        if ((this.searchbarElem && this.searchbarElem.nativeElement && !this.searchbarElem.nativeElement.contains(event.target))\n            ||\n                (!this.inputElem && this.inputElem.nativeElement && this.inputElem.nativeElement.contains(event.target))) {\n            this.hideItemList();\n        }\n    };\n    /**\n     * Get value from form\n     *\n     * @param selection\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype.getFormValue = function (selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return null;\n        }\n        var attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        if (typeof selection === 'object' && attr) {\n            return selection[attr];\n        }\n        return selection;\n    };\n    /**\n     * Get element's position on screen\n     *\n     * @param el\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype._getPosition = function (el) {\n        var xPos = 0;\n        var yPos = 0;\n        while (el) {\n            if (el.tagName === 'BODY') {\n                var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n                var yScroll = el.scrollTop || document.documentElement.scrollTop;\n                xPos += (el.offsetLeft - xScroll + el.clientLeft);\n                yPos += (el.offsetTop - yScroll + el.clientTop);\n            }\n            else {\n                xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n                yPos += (el.offsetTop - el.scrollTop + el.clientTop);\n            }\n            el = el.offsetParent;\n        }\n        return {\n            x: xPos,\n            y: yPos\n        };\n    };\n    AutoCompleteComponent.prototype.clickClear = function () {\n        this.clearValue(true);\n        this.itemsCleared.emit(true);\n    };\n    /**\n     * Clear current input value\n     *\n     * @param hideItemList\n     */\n    AutoCompleteComponent.prototype.clearValue = function (hideItemList) {\n        if (hideItemList === void 0) { hideItemList = false; }\n        this.keyword = '';\n        this.selection = null;\n        this.formValue = null;\n        if (hideItemList) {\n            this.hideItemList();\n        }\n        this.focusedOption = -1;\n        return;\n    };\n    AutoCompleteComponent.prototype.keyupIonSearchbar = function (event, show) {\n        this.getItems(event.detail.target.value, show);\n    };\n    AutoCompleteComponent.prototype.keyupIonInput = function (event, show) {\n        this.getItems(event.target.value, show);\n    };\n    /**\n     * Get items for auto-complete\n     *\n     * @param keyword\n     * @param show\n     */\n    AutoCompleteComponent.prototype.getItems = function (keyword, show) {\n        var _this = this;\n        this.isLoading = true;\n        if (this.promise) {\n            clearTimeout(this.promise);\n        }\n        this.promise = setTimeout(function () {\n            if (event) {\n                _this.keyword = keyword;\n            }\n            var result;\n            if (_this.showResultsFirst && _this.keyword.trim() === '') {\n                _this.keyword = '';\n            }\n            if (typeof _this.dataProvider === 'function') {\n                result = _this.dataProvider(_this.keyword);\n                _this.setSuggestions(result, show);\n                _this.isLoading = false;\n            }\n            else {\n                result = _this.dataProvider.getResults(_this.keyword);\n                if (result instanceof Subject) {\n                    result = result.asObservable();\n                }\n                else if (result instanceof Promise) {\n                    result = from(result);\n                }\n                if (result instanceof Observable) {\n                    result.pipe(finalize(function () {\n                        _this.isLoading = false;\n                    })).subscribe(function (results) {\n                        _this.setSuggestions(results, show);\n                    }, function (error) { return console.error(error); });\n                }\n                else {\n                    _this.setSuggestions(result, show);\n                    _this.isLoading = false;\n                }\n            }\n            _this.ionAutoInput.emit(_this.keyword);\n        }, this.options.debounce);\n    };\n    /**\n     * Get an item's label\n     *\n     * @param selection\n     */\n    AutoCompleteComponent.prototype.getLabel = function (selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return '';\n        }\n        var attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        var value = selection;\n        if (this.dataProvider.getItemLabel) {\n            value = this.dataProvider.getItemLabel(value);\n        }\n        if (!this.multi && typeof value !== 'undefined' && Object.prototype.toString.call(value) === '[object Array]') {\n            if (value.length === 0) {\n                return '';\n            }\n            else {\n                value = value[0];\n            }\n        }\n        if (typeof value === 'object' && attr) {\n            return value[attr] || '';\n        }\n        return value || '';\n    };\n    /**\n     * Get current selection\n     */\n    AutoCompleteComponent.prototype.getSelection = function () {\n        if (this.multi) {\n            return this.selection;\n        }\n        else {\n            return this.selected;\n        }\n    };\n    /**\n     * Get menu style\n     */\n    AutoCompleteComponent.prototype.listStyles = function () {\n        var listLocationStyles = this.listLocationStyles();\n        return __assign({}, listLocationStyles, this.styles.list);\n    };\n    AutoCompleteComponent.prototype.listLocationStyles = function () {\n        var location = this.location;\n        if (this.location === 'auto') {\n            var elementY = this._getPosition(this.searchbarElem.nativeElement).y;\n            var windowY = window.innerHeight;\n            if (elementY > windowY - elementY) {\n                location = 'top';\n            }\n            else {\n                location = 'bottom';\n            }\n        }\n        if (location === 'bottom') {\n            return {};\n        }\n        else {\n            return {\n                'bottom': '37px'\n            };\n        }\n    };\n    /**\n     * Get current input value\n     */\n    AutoCompleteComponent.prototype.getValue = function () {\n        return this.formValue;\n    };\n    /**\n     * Handle tap\n     *\n     * @param event\n     */\n    AutoCompleteComponent.prototype.handleTap = function (event) {\n        if (this.showResultsFirst || this.keyword.length > 0) {\n            this.getItems();\n        }\n    };\n    /**\n     * Handle tap when selecting an item\n     *\n     * @param $event\n     * @param suggestion\n     */\n    AutoCompleteComponent.prototype.handleSelectTap = function ($event, suggestion) {\n        this.selectItem(suggestion);\n        if ($event.srcEvent) {\n            if ($event.srcEvent.stopPropagation) {\n                $event.srcEvent.stopPropagation();\n            }\n            if ($event.srcEvent.preventDefault) {\n                $event.srcEvent.preventDefault();\n            }\n        }\n        else if ($event.preventDefault) {\n            $event.preventDefault();\n        }\n        return false;\n    };\n    /**\n     * Hide item list\n     */\n    AutoCompleteComponent.prototype.hideItemList = function () {\n        this.showList = this.alwaysShowList;\n        this.focusedOption = -1;\n    };\n    AutoCompleteComponent.prototype.highlightItem = function (direction) {\n        var max = this.suggestions.length - 1;\n        if (direction < 0) {\n            if (this.focusedOption === -1 || this.focusedOption === max) {\n                this.focusedOption = 0;\n            }\n            else {\n                this.focusedOption++;\n            }\n        }\n        else if (direction > 0) {\n            if (this.focusedOption === -1 || this.focusedOption === 0) {\n                this.focusedOption = max;\n            }\n            else {\n                this.focusedOption--;\n            }\n        }\n    };\n    /**\n     * Fired when the input focused\n     */\n    AutoCompleteComponent.prototype.onFocus = function (event) {\n        this.hasFocus = true;\n        this.getItems();\n        event = this._reflectName(event);\n        this.autoFocus.emit(event);\n        this.focus.emit(event);\n    };\n    /**\n     * Fired when the input focused\n     */\n    AutoCompleteComponent.prototype.onBlur = function (event) {\n        this.hasFocus = false;\n        event = this._reflectName(event);\n        this.autoBlur.emit(event);\n        this.blur.emit(event);\n    };\n    AutoCompleteComponent.prototype._reflectName = function (event) {\n        if (typeof event.srcElement.attributes['ng-reflect-name'] === 'object') {\n            event.srcElement.name = event.srcElement.attributes['ng-reflect-name'].value;\n        }\n        return event;\n    };\n    /**\n     * Register onChangeCallback\n     *\n     * @param fn\n     */\n    AutoCompleteComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * Register onTouchedCallback\n     *\n     * @param fn\n     */\n    AutoCompleteComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * Remove already selected suggestions\n     *\n     * @param suggestions\n     */\n    AutoCompleteComponent.prototype.removeDuplicates = function (suggestions) {\n        var selectedCount = this.selected ? this.selected.length : 0;\n        var suggestionCount = suggestions.length;\n        for (var i = 0; i < selectedCount; i++) {\n            var selectedLabel = this.getLabel(this.selected[i]);\n            for (var j = 0; j < suggestionCount; j++) {\n                var suggestedLabel = this.getLabel(suggestions[j]);\n                if (selectedLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                }\n            }\n        }\n        return suggestions;\n    };\n    AutoCompleteComponent.prototype.removeExcluded = function (suggestions) {\n        var excludedCount = this.exclude.length;\n        for (var i = 0; i < excludedCount; i++) {\n            var excludeLabel = this.exclude[i];\n            if (typeof excludeLabel === 'object') {\n                excludeLabel = this.getLabel(excludeLabel);\n            }\n            var suggestionCount = suggestions.length;\n            for (var j = 0; j < suggestionCount; j++) {\n                var suggestedLabel = this.getLabel(suggestions[j]);\n                if (excludeLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                    break;\n                }\n            }\n        }\n        return suggestions;\n    };\n    /**\n     * Remove item from selected\n     *\n     * @param selection\n     * @param notify?\n     */\n    AutoCompleteComponent.prototype.removeItem = function (selection, notify) {\n        var count = this.selected ? this.selected.length : 0;\n        for (var i = 0; i < count; i++) {\n            var item = this.selected[i];\n            var selectedLabel = this.getLabel(selection);\n            var itemLabel = this.getLabel(item);\n            if (selectedLabel === itemLabel) {\n                this.selected.splice(i, 1);\n            }\n        }\n        notify = typeof notify === 'undefined' ? true : notify;\n        if (notify) {\n            this.itemRemoved.emit(selection);\n            this.itemsChange.emit(this.selected);\n        }\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Select item from list\n     *\n     * @param selection\n     **/\n    AutoCompleteComponent.prototype.selectItem = function (selection) {\n        this.keyword = this.getLabel(selection);\n        this.formValue = this.getFormValue(selection);\n        this.hideItemList();\n        this.updateModel(this.formValue);\n        if (this.hideListOnSelection) {\n            this.hideItemList();\n        }\n        if (this.multi) {\n            if (this.maxSelected === null || this.selected.length <= this.maxSelected) {\n                this.clearValue();\n                this.selected.push(selection);\n                this.itemsChange.emit(this.selected);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.selection = selection;\n            this.selected = [selection];\n            this.itemsChange.emit(selection);\n        }\n        this.itemSelected.emit(selection);\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Set focus of searchbar\n     */\n    AutoCompleteComponent.prototype.setFocus = function () {\n        if (this.searchbarElem) {\n            this.searchbarElem.nativeElement.setFocus();\n        }\n    };\n    /**\n     * Set suggestions\n     *\n     * @param suggestions\n     * @param show\n     */\n    AutoCompleteComponent.prototype.setSuggestions = function (suggestions, show) {\n        if (this.removeDuplicateSuggestions) {\n            suggestions = this.removeDuplicates(suggestions);\n            suggestions = this.removeExcluded(suggestions);\n        }\n        this.suggestions = suggestions;\n        if (show || typeof show === 'undefined') {\n            this.showItemList();\n        }\n    };\n    /**\n     * Set current input value\n     *\n     * @param selection\n     */\n    AutoCompleteComponent.prototype.setValue = function (selection) {\n        this.formValue = this.getFormValue(selection);\n        this.keyword = this.getLabel(selection);\n        return;\n    };\n    /**\n     * Show item list\n     */\n    AutoCompleteComponent.prototype.showItemList = function () {\n        this.showList = true;\n    };\n    /**\n     * Update the model\n     */\n    AutoCompleteComponent.prototype.updateModel = function (enteredText) {\n        if (enteredText !== this.formValue) {\n            this.formValue = enteredText;\n            if (!this.multi) {\n                this.selected = null;\n            }\n        }\n        if (this.onChangeCallback) {\n            this.onChangeCallback(this.formValue);\n        }\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Write value\n     *\n     * @param value\n     */\n    AutoCompleteComponent.prototype.writeValue = function (value) {\n        if (value !== this.selection) {\n            this.selection = value || null;\n            this.formValue = this.getFormValue(this.selection);\n            this.keyword = this.getLabel(this.selection);\n        }\n    };\n    var AutoCompleteComponent_1;\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"alwaysShowList\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"enableBrowserAutoComplete\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"clearInvalidInput\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"dataProvider\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"disabled\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"emptyTemplate\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"exclude\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"frontIcon\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"hideListOnSelection\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"keyword\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"location\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"maxResults\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"maxSelected\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"multi\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"name\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"options\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonClasses\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonColor\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonIcon\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonSlot\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeDuplicateSuggestions\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"selectionTemplate\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"showResultsFirst\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"styles\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"template\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"useIonInput\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"model\", null);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"modelChange\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"eager\", null);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"blur\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"autoFocus\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"autoBlur\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"focus\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"ionAutoInput\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsChange\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsCleared\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsHidden\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemRemoved\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsShown\", void 0);\n    __decorate([\n        ViewChild('searchbarElem', {\n            read: ElementRef\n        })\n    ], AutoCompleteComponent.prototype, \"searchbarElem\", void 0);\n    __decorate([\n        ViewChild('inputElem', {\n            read: ElementRef\n        })\n    ], AutoCompleteComponent.prototype, \"inputElem\", void 0);\n    __decorate([\n        HostListener('document:click', ['$event'])\n    ], AutoCompleteComponent.prototype, \"documentClickHandler\", null);\n    AutoCompleteComponent = AutoCompleteComponent_1 = __decorate([\n        Component({\n            providers: [\n                {\n                    provide: NG_VALUE_ACCESSOR,\n                    useExisting: AutoCompleteComponent_1,\n                    multi: true\n                }\n            ],\n            selector: 'ion-auto-complete',\n            template: \"<ng-template #defaultSelection\\n             let-attrs=\\\"attrs\\\">\\n    <ion-chip class=\\\"{{ attrs.removeButtonClasses }}\\\"\\n              [color]=\\\"attrs.removeButtonColor\\\"\\n              [outline]=\\\"true\\\">\\n        <ion-icon *ngIf=\\\"frontIcon\\\"\\n                  [name]=\\\"frontIcon\\\"\\n                  [slot]=\\\"'start'\\\"\\n                  color=\\\"primary\\\"></ion-icon>\\n\\n        <ion-label>{{ attrs.label }}</ion-label>\\n\\n        <ion-icon *ngIf=\\\"attrs.removeButtonIcon\\\"\\n                  [name]=\\\"attrs.removeButtonIcon\\\"\\n                  [slot]=\\\"attrs.removeButtonSlot\\\"></ion-icon>\\n    </ion-chip>\\n</ng-template>\\n\\n<div *ngIf=\\\"multi\\\">\\n    <div *ngFor=\\\"let item of selected\\\"\\n         class=\\\"selected-items\\\"\\n         (click)=\\\"removeItem(item)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"selectionTemplate || defaultSelection\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                            attrs: {\\n                              data:                item,\\n                              label:               getLabel(item),\\n                              removeButtonClasses: removeButtonClasses,\\n                              removeButtonColor:   removeButtonColor,\\n                              removeButtonIcon:    removeButtonIcon,\\n                              removeButtonSlot:    removeButtonSlot\\n                            }\\n                         }\\\"></ng-template>\\n    </div>\\n</div>\\n\\n<ion-input #inputElem\\n           [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n           [name]=\\\"name\\\"\\n           (keyup)=\\\"keyupIonInput($event)\\\"\\n           (tap)=\\\"handleTap($event)\\\"\\n           [(ngModel)]=\\\"keyword\\\"\\n           (ngModelChange)=\\\"updateModel($event)\\\"\\n           [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n           [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n           [clearOnEdit]=\\\"options.clearOnEdit == null ? defaultOpts.clearOnEdit : options.clearOnEdit\\\"\\n           [clearInput]=\\\"options.clearInput == null ? defaultOpts.clearInput : options.clearInput\\\"\\n           [color]=\\\"options.color == null ? null : options.color\\\"\\n           [mode]=\\\"options.mode == null ? defaultOpts.mode : options.mode\\\"\\n           [disabled]=\\\"disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)\\\"\\n           [ngClass]=\\\"{ 'hidden': !useIonInput, 'loading': isLoading }\\\"\\n           [ngStyle]=\\\"styles.searchbar\\\"\\n           (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n           (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n           (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n           (keyup.escape)=\\\"hideItemList()\\\"\\n           (ionFocus)=\\\"onFocus($event)\\\"\\n           (ionBlur)=\\\"onBlur($event)\\\"></ion-input>\\n\\n<ion-searchbar #searchbarElem\\n               [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n               [name]=\\\"name\\\"\\n               [animated]=\\\"options.animated == null ? defaultOpts.animated : options.animated\\\"\\n               (ionInput)=\\\"keyupIonSearchbar($event)\\\"\\n               (tap)=\\\"handleTap($event)\\\"\\n               [(ngModel)]=\\\"keyword\\\"\\n               (ngModelChange)=\\\"updateModel($event)\\\"\\n               [cancelButtonIcon]=\\\"options.cancelButtonIcon == null ? defaultOpts.cancelButtonIcon : options.cancelButtonIcon\\\"\\n               [cancelButtonText]=\\\"options.cancelButtonText == null ? defaultOpts.cancelButtonText : options.cancelButtonText\\\"\\n               [clearIcon]=\\\"options.clearIcon == null ? defaultOpts.clearIcon : options.clearIcon\\\"\\n               [color]=\\\"options.color == null ? null : options.color\\\"\\n               [showCancelButton]=\\\"options.showCancelButton == null ?\\n                                        (defaultOpts.showCancelButton ? 'always' : 'never') :\\n                                        (options.showCancelButton ? 'always' : 'never')\\\"\\n               [debounce]=\\\"options.debounce == null ? defaultOpts.debounce : options.debounce\\\"\\n               [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n               [autocorrect]=\\\"options.autocorrect == null ? defaultOpts.autocorrect : options.autocorrect\\\"\\n               [mode]=\\\"options.mode == null ? defaultOpts.mode : options.mode\\\"\\n               [searchIcon]=\\\"options.searchIcon == null ? defaultOpts.searchIcon : options.searchIcon\\\"\\n               [spellcheck]=\\\"options.spellcheck == null ? defaultOpts.spellcheck : options.spellcheck\\\"\\n               [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n               [ngClass]=\\\"{ 'hidden': useIonInput, 'loading': isLoading, 'disabled': disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected) }\\\"\\n               [ngStyle]=\\\"styles.searchbar\\\"\\n               (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n               (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n               (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n               (keyup.escape)=\\\"hideItemList()\\\"\\n               (ionClear)=\\\"clickClear()\\\"\\n               (ionFocus)=\\\"onFocus($event)\\\"\\n               (ionBlur)=\\\"onBlur($event)\\\"></ion-searchbar>\\n\\n<ng-template #defaultTemplate\\n             let-attrs=\\\"attrs\\\">\\n    <span [innerHTML]='attrs.label | boldprefix:attrs.keyword'></span>\\n</ng-template>\\n\\n<ng-template #defaultEmptyTemplate\\n             let-attrs=\\\"attrs\\\"\\n             class=\\\"ion-text-center\\\">\\n    {{ options.noItems }}\\n</ng-template>\\n\\n<ul *ngIf=\\\"!(disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)) && suggestions.length > 0 && showList\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li *ngFor=\\\"let suggestion of suggestions| slice:0:maxResults; let index = index\\\"\\n        [ngClass]=\\\"{ 'focus': focusedOption === index }\\\"\\n        [ngStyle]=\\\"styles.listItem\\\"\\n        (click)=\\\"handleSelectTap($event, suggestion)\\\"\\n        (tap)=\\\"handleSelectTap($event, suggestion)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"template || defaultTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          data:               suggestion,\\n                          label:              getLabel(suggestion),\\n                          keyword:            keyword,\\n                          formValue:          getFormValue(suggestion),\\n                          labelAttribute:     getLabel(suggestion),\\n                          formValueAttribute: getFormValue(suggestion)\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\\n<ul *ngIf=\\\"suggestions.length === 0 && showList && options.noItems\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li [ngStyle]=\\\"styles.listItem\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"emptyTemplate || defaultEmptyTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          keyword: keyword\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\",\n            styles: [\"ion-auto-complete{overflow:hidden!important;width:90vw;display:inline-block}ion-auto-complete ion-searchbar{padding:1px!important}ion-auto-complete .disabled input.searchbar-input{pointer-events:none;cursor:default}ion-auto-complete ul{position:absolute;width:90vw;margin-top:0;background:#fff;list-style-type:none;padding:0;left:16px;z-index:999;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}ion-auto-complete ul li{padding:15px;border-bottom:1px solid #c1c1c1}ion-auto-complete ul ion-auto-complete-item{height:40px;width:100%}ion-auto-complete ul li:last-child{border:none}ion-auto-complete ul li.focus,ion-auto-complete ul li:focus,ion-auto-complete ul li:hover{cursor:pointer;background:#f1f1f1}ion-auto-complete .hidden{display:none}ion-auto-complete .loading input.searchbar-input{background:url(/assets/loading.gif) right 4px center/25px 25px no-repeat #fff}ion-auto-complete .searchbar-clear-button.sc-ion-searchbar-md{right:34px}ion-auto-complete .selected-items{float:left}\"]\n        })\n    ], AutoCompleteComponent);\n    return AutoCompleteComponent;\n}());\n\n/**\n * Bolds the beginning of the matching string in the item\n */\nvar BoldPrefix = /** @class */ (function () {\n    function BoldPrefix() {\n    }\n    BoldPrefix.prototype.transform = function (value, keyword) {\n        if (!keyword) {\n            return value;\n        }\n        var escaped_keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        return value.replace(new RegExp(escaped_keyword, 'gi'), function (str) {\n            return str.bold();\n        });\n    };\n    BoldPrefix = __decorate([\n        Pipe({\n            name: 'boldprefix'\n        }),\n        Injectable()\n    ], BoldPrefix);\n    return BoldPrefix;\n}());\n\nvar AutoCompleteModule = /** @class */ (function () {\n    function AutoCompleteModule() {\n    }\n    AutoCompleteModule_1 = AutoCompleteModule;\n    AutoCompleteModule.forRoot = function () {\n        return {\n            ngModule: AutoCompleteModule_1,\n            providers: []\n        };\n    };\n    var AutoCompleteModule_1;\n    AutoCompleteModule = AutoCompleteModule_1 = __decorate([\n        NgModule({\n            declarations: [\n                AutoCompleteComponent,\n                BoldPrefix\n            ],\n            exports: [\n                AutoCompleteComponent,\n                BoldPrefix\n            ],\n            imports: [\n                CommonModule,\n                FormsModule,\n                IonicModule\n            ]\n        })\n    ], AutoCompleteModule);\n    return AutoCompleteModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoCompleteComponent, AutoCompleteModule, AutoCompleteOptions, BoldPrefix };\n//# sourceMappingURL=ionic4-auto-complete.js.map\n","module.exports = \"<ion-header>\\r\\n    <ion-toolbar color=\\\"primary\\\" text-center>\\r\\n        <ion-title>{{Title}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <div>\\r\\n        <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Pickup Location</ion-label>\\r\\n            <ion-input [(ngModel)]=\\\"cityNames\\\" [value]=\\\"Text\\\" (ionInput)=\\\"getCities($event)\\\"></ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-list *ngIf=\\\"isCityAvailable\\\">\\r\\n            <ion-item *ngFor=\\\"let city of cities\\\" (click)=\\\"citySelected(city)\\\">{{city}}</ion-item>\\r\\n        </ion-list>\\r\\n    </div>\\r\\n    <!-- <ion-grid slot=\\\"bottom\\\">\\r\\n        <ion-row>\\r\\n            <ion-col text-center>\\r\\n                <ion-button color=\\\"medium\\\" (click)=\\\"cancelModal()\\\">Cancel</ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col text-center>\\r\\n                <ion-button color=\\\"warning\\\" (click)=\\\"submitModal()\\\">Submit</ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid> -->\\r\\n\\r\\n    <ion-footer no-shadow>\\r\\n        <ion-toolbar position=\\\"bottom\\\">\\r\\n            <ion-row>\\r\\n                <ion-col text-center>\\r\\n                    <ion-button color=\\\"medium\\\" (click)=\\\"cancelModal()\\\">Cancel</ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col text-center>\\r\\n                    <ion-button color=\\\"warning\\\" (click)=\\\"submitModal()\\\">Submit</ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-toolbar>\\r\\n    </ion-footer>\\r\\n</ion-content>\"","module.exports = \":host ion-footer {\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  bottom: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVxdWVzdC12ZWhpY2xlL0Q6XFx0YXhpLWFwcC9zcmNcXGFwcFxccGFnZXNcXHJlcXVlc3QtdmVoaWNsZVxccGxhY2VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLGVBQWU7RUFDZixPQUFPO0VBQ1AsUUFBUTtFQUNSLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlcXVlc3QtdmVoaWNsZS9wbGFjZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xyXG4gICAgaW9uLWZvb3RlciB7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\n \r\n@Component({\r\n  selector: 'places-modal',\r\n  templateUrl: './places.page.html',\r\n  styleUrls: ['./places.page.scss'],\r\n})\r\nexport class PlacesModalPage implements OnInit {\r\n  \r\n  modalTitle:string;\r\n  modelId:number;\r\n  isCityAvailable = false;\r\n    cities: any;\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private navParams: NavParams\r\n  ) { }\r\n \r\n  ngOnInit() {\r\n    console.table(this.navParams);\r\n    this.modelId = this.navParams.data.paramID;\r\n    this.modalTitle = this.navParams.data.paramTitle;\r\n  }\r\n  async cancelModal() {\r\n     this.modalController.dismiss();\r\n  }\r\n  async submitModal() {\r\n    const onSubmitedData = this.cityNames;\r\n    await this.modalController.dismiss(onSubmitedData);\r\n  }\r\n\r\n  cityNames: string;\r\n\r\n  initializeItems(){\r\n        this.cities = [\r\n          \"Avadi\",\"Ambattur\",\"Chengalpatu\",\"Ekattuthangal\",\"Padi\",\r\n          \"Manali new town\",\r\n        \"Kodungaiyur East\",\r\n        \"Kodungaiyur West\",\r\n        \"Madhavaram\",\r\n        \"Madhavaram Milk Colony\",\r\n        \"Mathur MMDA\",\r\n        \"Puzhal\",\r\n        \"Moolakadai\",\r\n        \"Kolathur\",\r\n        \"Parry's Corner\",\r\n        \"Royapuram\",\r\n        \"Villivakkam\",\r\n        \"Perambur\",\r\n        \"Korukkupet\",\r\n        \"Tiruvottiyur\",\r\n        \"Vyasarpadi\",\r\n        \"Manali\",\r\n        \"Tondiarpet\",\r\n        \"Vallalar Nagar\",\r\n        \"Ennore\",\r\n        \"Old Washermenpet\",\r\n        \"Kavangarai\",\r\n        \"New Washermenpet\",\r\n        \"Korukkupet\",\r\n        \"Mannadi\",\r\n        \"George Town\",\r\n        \"Seven Wells\",\r\n        \"Basin Bridge\",\r\n        \"Sowcarpet\",\r\n        \"Park Town\",\r\n        \"Periametu\",\r\n        \"Choolai\",\r\n        \"Veppery\",\r\n        \"Pattalam\",\r\n        \"Pulinanthope\",\r\n        \"M.K.B Nagar\",\r\n        \"Sharma Nagar\",\r\n        \"Selavoyal\",\r\n        \"Edapalayam\",\r\n        \"Manjambakkam\",\r\n        \"Ponniammanmedu\",\r\n        \"Sembiam\",\r\n        \"T.V.K Nagar\",\r\n        \"ICF Colony north\",\r\n        \"Central\",\r\n        \"Padi\",\r\n        \"Korattur\",\r\n        \"Lakshmi puram\",\r\n        \"Ambattur north\",\r\n        \"Oragadam\",\r\n        \"Ayapakkam\",\r\n        \"Pattravakkam\",\r\n        \"Thirumullaivoyal north\",\r\n        \"Avadi north\",\r\n        \"Redhills\",\r\n        \"Ajax\",\r\n        \"Kathivakkam\",\r\n        \"Ernavur\",\r\n        \"WIMCO\",\r\n        \"Sathangadu\",\r\n        \"Rajakadai\",\r\n        \"Kadambakkam\",\r\n        \"Kathirvedu\",\r\n        \"Moolakothiram\",\r\n        \"Erukanchery\",\r\n        \"Broadway\",\r\n        \"Jamalia\",\r\n        \"Kallikuppam\",\r\n        \"Pattabiram\",\r\n        \"Kosapet\",\r\n        ];\r\n        // {name:\"Avadi\"},{name:\"Ambattur\"},{name:\"Chengalpatu\"},{name:\"Ekattuthangal\"},{name:\"Padi\"}\r\n        \r\n    }\r\n    getCities(ev: any) {\r\n\r\n            this.initializeItems();\r\n        \r\n            const val = ev.target.value;\r\n        \r\n            if (val && val.trim() != '') {\r\n                this.isCityAvailable = true;\r\n                this.cities = this.cities.filter((city) => {\r\n                return (city.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n            })\r\n        }\r\n    }\r\n    citySelected(selected : string){\r\n      this.cityNames = selected;\r\n      this.cities = [];\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AutoCompleteModule } from 'ionic4-auto-complete';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RequestVehiclePage } from './request-vehicle.page';\nimport { PlacesModalPage } from \"./places.page\";\nimport { CalendarModule } from 'ion2-calendar';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RequestVehiclePage\n  },\n  {\n    path: 'places-modal',\n    component: PlacesModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AutoCompleteModule,\n    CalendarModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RequestVehiclePage,PlacesModalPage]\n})\nexport class RequestVehiclePageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Request Vehicle</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<!-- <ion-toolbar color=\\\"secondary\\\" class=\\\"date-filter\\\">\\n    <ion-input class=\\\"date-picker\\\" placeholder=\\\"DD/MM/YYYY\\\" [(ngModel)]=\\\"daterange\\\"></ion-input>\\n    <ion-buttons slot=\\\"end\\\">\\n        <ion-button size=\\\"small\\\" class=\\\"calendar-icon\\\" shape=\\\"round\\\" color=\\\"medium\\\" (click)=\\\"openCalendar()\\\">\\n            <ion-icon name=\\\"calendar\\\"></ion-icon>\\n        </ion-button>\\n    </ion-buttons>\\n</ion-toolbar> -->\\n<ion-content>\\n\\n    <!-- <div class=\\\"bg-profile\\\" text-center padding>\\n        <img src=\\\"assets/img/ionic4start-ico.png\\\">\\n    </div> -->\\n\\n    <ion-card class=\\\"bg-white\\\" no-margin>\\n        <ion-card-content>\\n            <div>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <p>\\n                                <ion-icon name=\\\"alert\\\"></ion-icon> Please fill the requested details</p>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"grid-btns\\\">\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item (click)=\\\"openPlacesModal()\\\">\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\" no-padding>From:<br>\\n                                    <p *ngIf=\\\"!selectedCity\\\">Select a place</p>\\n                                    <strong *ngIf=\\\"selectedCity\\\">{{selectedCity}}</strong>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item (click)=\\\"openPlacesModal()\\\">\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\">To:<br>\\n                                    <p *ngIf=\\\"!selectedCity\\\">Select a place</p>\\n                                    <strong *ngIf=\\\"selectedCity\\\">{{selectedCity}}</strong>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"grid-btns\\\">\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item (click)=\\\"openCalendar()\\\">\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\">Start Date:<br>\\n                                    <strong>{{startDate}}</strong>\\n                                    <p *ngIf=\\\"!startDate\\\">Select date</p>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item (click)=\\\"openCalendar()\\\">\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\">End Date:<br>\\n                                    <!-- <ion-input type=\\\"text\\\" [(ngModel)]=\\\"daterange\\\" readonly></ion-input> -->\\n                                    <strong>{{endDate}}</strong>\\n                                    <p *ngIf=\\\"!endDate\\\">Select date</p>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"grid-btns\\\">\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item>\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\">Vehicle Type:<br>\\n                                    <strong>Prime</strong>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                        <ion-col size=\\\"6\\\">\\n                            <ion-item>\\n                                <ion-icon name=\\\"ios-arrow-down\\\" slot=\\\"end\\\"></ion-icon>\\n                                <ion-label class=\\\"ion-text-wrap\\\">Model:<br>\\n                                    <strong>Tata Indica</strong>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <div margin-top>\\n                    <ion-button (click)=\\\"goToHome()\\\" icon-left size=\\\"medium\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"warning\\\" tappable>\\n                        Submit\\n                    </ion-button>\\n                </div>\\n                <!-- <ion-list class=\\\"request-form\\\">\\n\\n                    <ion-item (click)=\\\"openCalendar()\\\">\\n                        <ion-label position=\\\"floating\\\">Date</ion-label>\\n                        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"daterange\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>Vehicle Type</ion-label>\\n                        <ion-select class=\\\"myCustomSelect\\\" placeholder=\\\"-Select-\\\" ok-text=\\\"Okay\\\" cancel-text=\\\"Dismiss\\\">\\n                            <ion-select-option *ngFor=\\\"let type of carType\\\">{{type}}</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>Vehicle Model</ion-label>\\n                        <ion-select class=\\\"myCustomSelect\\\" placeholder=\\\"-Select-\\\" ok-text=\\\"Okay\\\" cancel-text=\\\"Dismiss\\\">\\n                            <ion-select-option *ngFor=\\\"let car of carModels\\\">{{car}}</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Person Count</ion-label>\\n                        <ion-input type=\\\"text\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Mobile Number</ion-label>\\n                        <ion-input type=\\\"text\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Description</ion-label>\\n                        <ion-textarea></ion-textarea>\\n                    </ion-item>\\n                    <div margin-top>\\n                        <ion-button icon-left size=\\\"medium\\\" expand=\\\"full\\\" shape=\\\"round\\\" color=\\\"warning\\\" tappable>\\n                            <ion-icon name=\\\"log-in\\\"></ion-icon>\\n                            Submit\\n                        </ion-button>\\n                    </div>\\n                </ion-list> -->\\n            </div>\\n\\n            <p margin-bottom>\\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Illum odio placeat incidunt nesciunt atque ratione quisquam, fugit omnis maxime adipisci excepturi dignissimos aliquam asperiores itaque unde sequi? Minus, quia, dolore?\\n            </p>\\n\\n            <p>\\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Illum odio placeat incidunt nesciunt atque ratione quisquam, fugit omnis maxime adipisci excepturi dignissimos aliquam asperiores itaque unde sequi? Minus, quia, dolore?\\n            </p>\\n        </ion-card-content>\\n    </ion-card>\\n\\n</ion-content>\"","module.exports = \":host ion-content {\\n  --background: linear-gradient(-135deg, var(--ion-color-medium), var(--ion-color-light))\\n    ; }\\n\\n:host .date-filter ion-input.date-picker {\\n  background: #fff;\\n  color: #444;\\n  width: 98%;\\n  margin: 0 10px; }\\n\\n:host .date-filter .calendar-icon ion-icon {\\n  font-size: 30px; }\\n\\n:host .request-form ion-item {\\n  --border-color: var(--ion-color-secondary); }\\n\\n:host .myCustomSelect {\\n  max-width: 100% !important; }\\n\\n:host .grid-btns ion-col ion-item {\\n  max-width: 100%;\\n  --background: var(--ion-color-medium); }\\n\\n:host .grid-btns ion-col ion-item ion-label {\\n    font-size: 80%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVxdWVzdC12ZWhpY2xlL0Q6XFx0YXhpLWFwcC9zcmNcXGFwcFxccGFnZXNcXHJlcXVlc3QtdmVoaWNsZVxccmVxdWVzdC12ZWhpY2xlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRO0lBQWEsRUFBQTs7QUFGckI7RUFNWSxnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFVBQVU7RUFDVixjQUFjLEVBQUE7O0FBVDFCO0VBYWdCLGVBQWUsRUFBQTs7QUFiL0I7RUFtQlksMENBQWUsRUFBQTs7QUFuQjNCO0VBdUJRLDBCQUEwQixFQUFBOztBQXZCbEM7RUE0QmdCLGVBQWU7RUFDZixxQ0FBYSxFQUFBOztBQTdCN0I7SUErQm9CLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlcXVlc3QtdmVoaWNsZS9yZXF1ZXN0LXZlaGljbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGlvbi1jb250ZW50IHtcbiAgICAgICAgLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTEzNWRlZywgdmFyKC0taW9uLWNvbG9yLW1lZGl1bSksIHZhcigtLWlvbi1jb2xvci1saWdodCkpXG4gICAgfVxuICAgIC5kYXRlLWZpbHRlciB7XG4gICAgICAgIGlvbi1pbnB1dC5kYXRlLXBpY2tlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgICAgICAgY29sb3I6ICM0NDQ7XG4gICAgICAgICAgICB3aWR0aDogOTglO1xuICAgICAgICAgICAgbWFyZ2luOiAwIDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgLmNhbGVuZGFyLWljb24ge1xuICAgICAgICAgICAgaW9uLWljb24ge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAucmVxdWVzdC1mb3JtIHtcbiAgICAgICAgaW9uLWl0ZW0ge1xuICAgICAgICAgICAgLS1ib3JkZXItY29sb3I6IHZhcigtLWlvbi1jb2xvci1zZWNvbmRhcnkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5teUN1c3RvbVNlbGVjdCB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAuZ3JpZC1idG5zIHtcbiAgICAgICAgaW9uLWNvbCB7XG4gICAgICAgICAgICBpb24taXRlbSB7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XG4gICAgICAgICAgICAgICAgaW9uLWxhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit} from '@angular/core';\nimport { CalendarModal, CalendarModalOptions,DayConfig,CalendarResult } from 'ion2-calendar';\nimport { ModalController,AlertController,PopoverController,NavController } from '@ionic/angular';\nimport { PlacesModalPage } from \"./places.page\";\nimport * as moment from \"moment\";\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './request-vehicle.page.html',\n  styleUrls: ['./request-vehicle.page.scss'],\n})\nexport class RequestVehiclePage implements OnInit {\n  endDate: string;\n  startDate: string;\n  fromLocation = 'Avadi';\n  toLocation = 'T.Nagar';\n  selectedCity:any = \"Avadi\";\n\n  constructor(\n    public modalCtrl: ModalController,\n    public popoverCtrl: PopoverController,\n    public alertCtrl: AlertController,\n    public navCtrl: NavController,\n    ) { }\n\n  carModels = [\n    \"Toyota Platinum Etios\",\n    \"Maruti Suzuki Dzire\",\n    \"Renault Lodgy\",\n    \"Mahindra Scorpio\",\n    \"Toyota Innova Crysta\",\n    \"Hyundai Xcent\",\n    \"Nissan Sunny\"\n  ];\n  carType = [\"Mini\", \"Micro\", \"Prime\"];\n\n  async openCalendar() {\n    const options: CalendarModalOptions = {\n      pickMode: 'single',\n      title: 'Calendar',\n    };\n  \n    const myCalendar = await this.modalCtrl.create({\n      component: CalendarModal,\n      componentProps: { options }\n    });\n  \n    myCalendar.present();\n    const event: any = await myCalendar.onDidDismiss();\n    const newFormat = moment(event.data.dateObj).format(\"DD-MMMM-YYYY\");\n    this.endDate = newFormat;\n    this.startDate = newFormat;\n  }\n  \n  async fromLocationModal() {\n    const changeLocation = await this.alertCtrl.create({\n      header: 'Pickup Location',\n      // message: 'Type your Address.',\n      inputs: [\n        {\n          name: 'location',\n          placeholder: 'Enter your City',\n          type: 'text'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Submit',\n          handler: async (data) => {\n            console.log('Change clicked', data);\n            this.fromLocation = data.location;\n          }\n        }\n      ]\n    });\n    changeLocation.present();\n  }\n \n  async openPlacesModal() {\n    const modal = await this.modalCtrl.create({\n      component: PlacesModalPage,\n      componentProps: {\n        \"Title\": \"Select Location\"\n      }\n    });\n \n    modal.onDidDismiss().then((selectedCity) => {\n      if (selectedCity !== null) {\n        this.selectedCity = selectedCity.data;\n      }\n    });\n \n    return await modal.present();\n  }\n\n  goToHome() {\n    this.navCtrl.navigateRoot('/home-results');\n  }\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}